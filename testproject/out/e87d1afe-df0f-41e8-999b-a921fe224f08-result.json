{"name": "test_comment", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"app\"]/div/div[2]/div[2]/div/div[2]/div[1]\"}\n  (Session info: headless chrome=92.0.4515.131)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00D42A33+2501171]\n\tOrdinal0 [0x00CDD1C1+2085313]\n\tOrdinal0 [0x00BE1FA8+1056680]\n\tOrdinal0 [0x00C0C78B+1230731]\n\tOrdinal0 [0x00C364A2+1402018]\n\tOrdinal0 [0x00C2568A+1332874]\n\tOrdinal0 [0x00C348BC+1394876]\n\tOrdinal0 [0x00C2551B+1332507]\n\tOrdinal0 [0x00C01D74+1187188]\n\tOrdinal0 [0x00C02BD9+1190873]\n\tGetHandleVerifier [0x00EBEFE6+1504438]\n\tGetHandleVerifier [0x00F6DDA5+2220661]\n\tGetHandleVerifier [0x00DC5589+481881]\n\tGetHandleVerifier [0x00DC4639+477961]\n\tOrdinal0 [0x00CE28BD+2107581]\n\tOrdinal0 [0x00CE6728+2123560]\n\tOrdinal0 [0x00CE6862+2123874]\n\tOrdinal0 [0x00CEFA81+2161281]\n\tBaseThreadInitThunk [0x766EFA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x77827A7E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77827A4E+238]", "trace": "def test_comment():\n        driver = webdriver.Chrome(ChromeDriverManager().install(), options=opt)\n        driver.set_window_size(1000, 500, 500)\n    \n        # Load page\n        driver.get('http://localhost:1667/')\n        time.sleep(2)\n    \n        # Enter the data to be uploaded\n        email = 'testuser1@example.com'\n        username = 'testuser1'\n        pwd = 'Abcd123$'\n        comment_text = 'I written a comment to the post'\n    \n        # Fields xpath\n        email_x = '//*[@id=\"app\"]/div/div/div/div/form/fieldset[1]/input'\n        pwd_x = '//*[@id=\"app\"]/div/div/div/div/form/fieldset[2]/input'\n        username_x = '//*[@id=\"app\"]/nav/div/ul/li[4]/a'\n        sign_button_x = '//*[@id=\"app\"]/nav/div/ul/li[2]/a'\n        sign_in_btn_x = '//*[@id=\"app\"]/div/div/div/div/form/button'\n        my_title_x = '//*[@id=\"app\"]/div/div[2]/div/div/div[1]/ul/li[1]/a'\n        post_tilte_x = '//*[@id=\"app\"]/div/div[2]/div/div/div[2]/div/div/div[1]/a/h1'\n        comment_x = '//*[@id=\"app\"]/div/div[2]/div[2]/div/div/form/div[1]/textarea'\n        comment_btn_x = '//*[@id=\"app\"]/div/div[2]/div[2]/div/div/form/div[2]/button'\n        comment_text_x = '//*[@id=\"app\"]/div/div[2]/div[2]/div/div[2]/div[1]'\n    \n        # Sign in\n        sign_button = driver.find_element(By.XPATH, sign_button_x)\n        sign_button.click()\n        driver.find_element(By.XPATH, email_x).send_keys(email)\n        driver.find_element(By.XPATH, pwd_x).send_keys(pwd)\n        sign_in_btn = driver.find_element(By.XPATH, sign_in_btn_x)\n        sign_in_btn.click()\n        time.sleep(2)\n    \n        # Check box\n        assert username == driver.find_element(By.XPATH, username_x).text\n        time.sleep(2)\n    \n        # Post view\n        driver.find_element(By.XPATH, username_x).click()  # username click\n        time.sleep(2)\n        driver.find_element(By.XPATH, my_title_x).click()  # my title click\n        time.sleep(2)\n        driver.find_element(By.XPATH, post_tilte_x).click()  # post title click\n        time.sleep(2)\n    \n        # Post comment\n        driver.find_element(By.XPATH, comment_x).send_keys(comment_text)\n        driver.find_element(By.XPATH, comment_btn_x).click()\n    \n        # Check\n>       assert comment_text == driver.find_element(By.XPATH, comment_text_x).text\n\nTC006_test.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1153: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n..\\..\\..\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:400: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C3DA1A4F70>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77827A7E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77827A4E+238]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"app\"]/div/div[2]/div[2]/div/div[2]/div[1]\"}\nE         (Session info: headless chrome=92.0.4515.131)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00D42A33+2501171]\nE       \tOrdinal0 [0x00CDD1C1+2085313]\nE       \tOrdinal0 [0x00BE1FA8+1056680]\nE       \tOrdinal0 [0x00C0C78B+1230731]\nE       \tOrdinal0 [0x00C364A2+1402018]\nE       \tOrdinal0 [0x00C2568A+1332874]\nE       \tOrdinal0 [0x00C348BC+1394876]\nE       \tOrdinal0 [0x00C2551B+1332507]\nE       \tOrdinal0 [0x00C01D74+1187188]\nE       \tOrdinal0 [0x00C02BD9+1190873]\nE       \tGetHandleVerifier [0x00EBEFE6+1504438]\nE       \tGetHandleVerifier [0x00F6DDA5+2220661]\nE       \tGetHandleVerifier [0x00DC5589+481881]\nE       \tGetHandleVerifier [0x00DC4639+477961]\nE       \tOrdinal0 [0x00CE28BD+2107581]\nE       \tOrdinal0 [0x00CE6728+2123560]\nE       \tOrdinal0 [0x00CE6862+2123874]\nE       \tOrdinal0 [0x00CEFA81+2161281]\nE       \tBaseThreadInitThunk [0x766EFA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77827A7E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77827A4E+238]\n\n..\\..\\..\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:236: NoSuchElementException"}, "attachments": [{"name": "log", "source": "ee9b37f0-2902-4b1f-804b-37c610cc8751-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "0716ed90-885c-4044-9438-202e4a1ebb80-attachment.txt", "type": "text/plain"}], "start": 1628867692044, "stop": 1628867707830, "uuid": "c0687bab-ec52-4512-8bd0-fab8e919d4e0", "historyId": "8b6bd1285b1a4796b9c52bd4df568517", "testCaseId": "24e8b33bfc8f4d38a41353a52ad63100", "fullName": "TC006_test#test_comment", "labels": [{"name": "suite", "value": "TC006_test"}, {"name": "host", "value": "R90R8C8Z"}, {"name": "thread", "value": "19364-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TC006_test"}]}